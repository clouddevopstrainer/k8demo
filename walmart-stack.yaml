# -------------------
# MongoDB Deployment
# -------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:6
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
      volumes:
        - name: mongo-storage
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017

# -------------------
# Walmart App Deployment
# -------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: walmart-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: walmart-app
  template:
    metadata:
      labels:
        app: walmart-app
    spec:
      initContainers:
        - name: wait-for-mongo
          image: busybox:1.35
          command: ['sh', '-c', 'until nc -z mongo 27017; do echo "Waiting for MongoDB..."; sleep 5; done;']
      containers:
        - name: walmart-app
          image: walmart-app:latest
          imagePullPolicy: Never   # Important for Minikube local image
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATA_MONGODB_HOST
              value: mongo
            - name: SPRING_DATA_MONGODB_PORT
              value: "27017"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: walmart-service
spec:
  type: NodePort
  selector:
    app: walmart-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30001
